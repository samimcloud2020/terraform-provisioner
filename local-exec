The local-exec provisioner works on the Terraform host â€“ where Terraform configuration is applied/executed. It is used to execute any shell command. 
It is used to set or read environment variables, details about the resource which is created, invoke any process or application, etc.

If we ship any shell script along with the Terraform config, or if the shell scripts are already available on the host to be invoked,
then local-exec provisioners are used to execute the same.
-------------------------------------------------------------------------------------------
resource "aws_instance" "web" {
  # ...

  provisioner "local-exec" {
    command = "echo The server's IP address is ${self.private_ip}"
  }
}
-------------------------------------------------------------------------------------

resource "aws_instance" "web" {
  # ...

  provisioner "local-exec" {
    when    = destroy
    command = "echo 'Destroy-time provisioner'"
  }
}

--------------------------------------------------------------------------------------
resource "aws_instance" "web" {
  # ...

  provisioner "local-exec" {
    command = "echo first"
  }

  provisioner "local-exec" {
    command = "echo second"
  }
}
-------------------------------------------------------------------------------------
Failure Behavior
By default, provisioners that fail will also cause the Terraform apply itself to fail. The on_failure setting can be used to change this. 
The allowed values are:

continue - Ignore the error and continue with creation or destruction.

fail - Raise an error and stop applying (the default behavior). If this is a creation provisioner, taint the resource.
---------------------------------------------------------------------------------------

resource "aws_instance" "web" {
  # ...

  provisioner "local-exec" {
    command    = "echo The server's IP address is ${self.private_ip}"
    on_failure = continue
  }
}

---------------------------------------------------------------------------------------

